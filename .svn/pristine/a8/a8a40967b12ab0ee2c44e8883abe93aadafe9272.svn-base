package kr.or.annapharm.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.josephoconnell.html.HTMLInputFilter;

import kr.or.annapharm.command.Criteria;
import kr.or.annapharm.command.PageMaker;
import kr.or.annapharm.dto.ReplyVO;
import kr.or.annapharm.service.ReplyService;


//	url : /replies

//	chemist_in_code번 게시글의 페이징 처리된 댓글 목록
//	/replies/{chemist_in_code}/{page} 			page list: GET방식
//	/replies 						regist : POST 방식 : 댓글 입력
//	/replies/{chemist_ans_code}					modify : PUT,PATCH방식, chemist_ans_code 댓글의 수정
//	/replies/{chemist_in_code}/{chemist_ans_code}/{page}		remove : DELETE 방식, chemist_ans_code 댓글의 삭제
//	/replie

@RestController
@RequestMapping("/replies")
public class ReplyController {


	@Autowired
	private ReplyService service;

	@RequestMapping(value = "/{chemist_in_code}/{page}", method = RequestMethod.GET)
	public ResponseEntity<Map<String, Object>> replyList(@PathVariable("chemist_in_code")int chemist_in_code, @PathVariable("page")int page)throws Exception{

		ResponseEntity<Map<String, Object>> entity = null;
		Criteria cri = new Criteria();
		cri.setPage(page);

		System.out.println(cri);
		System.out.println(cri.getPage());

		Map<String, Object> dataMap = service.getReplyList(chemist_in_code, cri);
		entity = new ResponseEntity<Map<String,Object>>(dataMap, HttpStatus.OK);

		return entity;

	}



	@RequestMapping(value = "", method = RequestMethod.POST)
	public ResponseEntity<Map<String, Object>> register(@RequestBody ReplyVO reply)throws Exception{

		ResponseEntity<Map<String, Object>> entity = null;

		reply.setChemistInReply(HTMLInputFilter.htmlSpecialChars(reply.getChemistInReply()));

		service.registReply(reply);
		Criteria cri = new Criteria();

		Map<String, Object> dataMap = service.getReplyList(reply.getChemistInCode(), cri);
		PageMaker pageMaker =(PageMaker) dataMap.get("pageMaker");
		int realEndPage= pageMaker.getRealEndPage();

		entity = new ResponseEntity<Map<String,Object>>(dataMap, HttpStatus.OK);

		return entity;

	}


	@RequestMapping(value = "/{chemist_ans_code}", method = { RequestMethod.PUT, RequestMethod.PATCH })
	public ResponseEntity<String> modify(@PathVariable("chemist_ans_code")int chemist_ans_code, @RequestBody ReplyVO reply)throws Exception{

		ResponseEntity<String> entity = null;

		reply.setChemistAnsCode(chemist_ans_code);
		service.modifyReply(reply);
		entity = new ResponseEntity<String>(HttpStatus.OK);

		return entity;

	}


	@RequestMapping(value = "/{chemist_in_code}/{chemist_ans_code}/{page}", method= RequestMethod.DELETE)
	public ResponseEntity<String> remove(@PathVariable("chemist_ans_code") int chemist_ans_code, @PathVariable("chemist_in_code") int chemist_in_code, @PathVariable("page")int page)throws Exception{

		ResponseEntity<String> entity = null;

		service.removeReply(chemist_ans_code);

		Criteria cri = new Criteria();

		Map<String, Object> dataMap = service.getReplyList(chemist_in_code, cri);
		PageMaker pageMaker = (PageMaker) dataMap.get("pageMaker");

		int nrealEndPage = pageMaker.getEndPage();
		if(page > nrealEndPage) {
			page = nrealEndPage;
		}

		entity = new ResponseEntity<String>(""+page, HttpStatus.OK);

		return entity;

	}



}




