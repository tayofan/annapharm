package kr.or.annapharm.controller;

import java.util.Random;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.annapharm.dto.MemberVO;
import kr.or.annapharm.service.MemberService;

@Controller
public class CommonRestController {

	@Autowired
	MemberService memberService;


	// 휴대폰 인증(인증번호 발송)
	@RequestMapping(value = "/sendSms", method = RequestMethod.POST, produces = "text/plain;charset=utf-8")
	public ResponseEntity<String> telCheck(@RequestParam String memTel, HttpServletRequest request) throws Exception {
		System.out.println("!!!!!!!!!!!!!!");
		System.out.println("tel : " + memTel);

		ResponseEntity<String> entity = null;

		Random rand = new Random();
		String numStr = ""; // 난수가 저장될 변수

		for (int i = 0; i < 6; i++) {

			// 0~9 까지 난수 생성
			String ran = Integer.toString(rand.nextInt(10));
			numStr += ran;
		}

		// Sendsms.sendSMS(memTel, "인증번호 [ "+numStr+" ]");

		HttpSession session = request.getSession();
		session.setAttribute("numStr", numStr);
		session.setMaxInactiveInterval(60 * 3);

		System.out.println(numStr);

		entity = new ResponseEntity<String>(numStr, HttpStatus.OK);

		return entity;
	}


	@RequestMapping(value = "/foundId", method = RequestMethod.POST, produces = "text/plain;charset=utf-8")
	public ResponseEntity<String> foundId(@RequestParam String memName, @RequestParam String memTel) throws Exception {
		System.out.println("!!!!!!!!!!!!!!");
		System.out.println(memTel + " / " + memName);

		ResponseEntity<String> entity = null;

		MemberVO member = new MemberVO();

		member.setMemName(memName);
		member.setMemTel(memTel);

		String memId = memberService.foundId(member);


		entity = new ResponseEntity<String>(memId, HttpStatus.OK);

		return entity;
	}


//	@RequestMapping(value ="/changePassword",method = RequestMethod.POST, produces = "text/plain;charset=utf-8")
//	public ResponseEntity<T>
//	@ResponseBody


}
