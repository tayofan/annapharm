<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Prescription-Mapper">

	<select id="selectPrescriptionList" resultType="prescription">
		select ps_code
		      ,doctor_code
		      ,patient_code
		      ,chemist_code
		      ,ps_date
		      ,ps_lastdate
		      ,ps_modify_req
		      ,ps_complete_date
		      ,ps_status
		  from prescription
		 where patient_code = #{patientCode}
	</select>

	<select id="selectPrescriptionOne" resultType="prescription">
		select ps_code
		      ,doctor_code
		      ,patient_code
		      ,chemist_code
		      ,ps_date
		      ,ps_lastdate
		      ,ps_modify_req
		      ,ps_complete_date
		      ,ps_status
		  from prescription
		 where patient_code = #{patientCode}
           and ps_code = #{psCode}
	</select>

	<select id="selectPrescriptionCount" resultType="int">
		select count(a.psCode)
		  from pre_drug a, prescription b
		 where b.patient_code = #{patientCode}
		   and a.ps_code = b.ps_code
	</select>

	<!-- 헤지 : 처방이력에서 처방전 선택 후 처방 상세 내역 출력  -->
	<select id="selectPrescriptionDetail" resultType="prescriptionDetail">
		select substr(a.md_class,1,2) as md_class
		     , b.mi_type
		     , a.mi_code
		     , a.md_no
		     , b.mi_use
		     , a.md_name
		     , c.pre_drug_count
		     , c.pre_drug_day
		     , c.ps_code
		  from medicine a, medicine_info b, pre_drug c, prescription d
		 where d.ps_code = #{psCode}
		   and a.mi_code = b.mi_code
		   and a.md_no = c.md_no
		   and c.ps_code = d.ps_code
	</select>

	<!-- 병진 : 매출목록에서 처방조제 상세 내역을 가져올 때 사용 -->
	<select id="selectSalesAnalyssisDetail" resultType="kr.or.annapharm.dto.SalesAnalysisDetailVO">
		select  a.md_name
             , b.mi_company
             , b.mi_use
             , c.pre_drug_num
		     , c.pre_drug_count
		     , c.pre_drug_day
             , b.mi_price
             , (c.pre_drug_num * b.mi_price) as total
		  from medicine a, medicine_info b, pre_drug c, prescription d
		 where d.ps_code = #{psCode}
		   and a.mi_code = b.mi_code
		   and a.md_no = c.md_no
		   and c.ps_code = d.ps_code
	</select>

	<!-- 병진: 약사조제화면에서 약에대한 정보를 외부 URL 정보를 가져오는 sql문  -->
	<select id="selectMedicineInfoOne" resultType="readMedicineInfo">
		SELECT
			B.md_no
		    , B.md_name
		    , B.md_effect
		    , B.md_use
		    , B.md_attention
		  FROM pre_drug A, medicine B
		 WHERE ps_code = #{psCode}
		   and A.md_no = B.md_no
		   and rownum = 1
	</select>
	
	<!-- 헤지 : 기존처방전 삭제 -->
	<delete id="deleteOriginalPrescription" parameterType="String">
		delete from pre_drug
		 where ps_code = #{psCode}
	</delete>

	<!-- 헤지 :  수정 처방전 약 추가 -->
	<update id="insertUpdatePrescription" parameterType="updatePrescription">
		insert into pre_drug
 		values(#{psCode}, #{mdNo}, #{preDrugNum}, #{preDrugDay}, #{preDrugCount})
	</update>
	
	<!-- 헤지 : 새 처방전 작성(처방전추가) -->
	<update id="insertNewPrescription" parameterType="prescription">
		insert into prescription(ps_code
                       , doctor_code
                       , patient_code
                       , chemist_code
                       , ps_date
                       , ps_lastdate
                       , ps_status
                       , ps_type)
				 values(concat(replace(to_char(sysdate), '/', ''),lpad(pre_num_seq.nextval,4,0))
				     , #{doctorCode}
				     , #{patientCode}
				     , #{chemistCode}
				     , sysdate
				     , sysdate
				     , '조제대기'
				     , '처방')
	</update>

</mapper>


