package kr.or.annapharm.service;

import java.util.List;
import java.util.Map;

import kr.or.annapharm.dao.IPatientDAO;
import kr.or.annapharm.dao.MedicineDAO;
import kr.or.annapharm.dto.PatientVO;
import kr.or.annapharm.dto.PrescriptionHistoryVO;
import kr.or.annapharm.dto.PrescriptionLogVO;

public class PatientServiceImpl implements IPatientService {

	private IPatientDAO patientDAO;

	private MedicineDAO medicineDAO;

	public void setPatientDAO(IPatientDAO patientDAO) {
		this.patientDAO = patientDAO;
	}

	public void setMedicineDAO(MedicineDAO medicineDAO) {
		this.medicineDAO = medicineDAO;
	}

	// 처방 대기 환자 목록 - 예전
//	@Override
//	public List<Map<String, String>> getPatientList() throws Exception {
//
//		List<Map<String, String>> patientList = null;
//
//		patientList = patientDAO.selectPatientList();
//
//		return patientList;
//	}

	// 처방 대기 환자 목록 - 최근
	@Override
	public List<Map<String, String>> getWaitingPatientList() throws Exception {
		
		List<Map<String, String>> patientList = null;

		patientList = patientDAO.selectWaitingPatientList();
		
		System.out.println(patientList);
		
		int i = 0;
		
		for(Map<String, String> str : patientList) {
			System.out.println("환자코드 : " + str.get("PATIENT_CODE"));
			
			String pCode = str.get("PATIENT_CODE");
			
			System.out.println("안녕 : " + patientDAO.selectPatiengLastPrescriptionDate(pCode));
			
			patientList.get(i).put("psDate", patientDAO.selectPatiengLastPrescriptionDate(pCode));
			
			i++;
		}
		System.out.println("patientList : " + patientList);

		
		
		return patientList;
	}

	// 처방 대기 환자 목록 : 환자의 최근 처방일
	@Override
	public void getPatientLastPrescriptionDate(String patientCode) {
		// TODO Auto-generated method stub
		
	}
	
	// 처방 대기 환자 중 선택한 환자 조회(환자코드) - 최근
	@Override
	public List<PatientVO> getWaitingPatientChoice(String patientCode) throws Exception {
		List<PatientVO> patientOne = null;
		
		patientOne = patientDAO.selectWaitingPatientChoice(patientCode);
		
		return patientOne;
	}
	
	// 처방 대기 환자 중 선택한 환자 조회(환자코드) - 예전
	@Override
	public List<PatientVO> getPatientOne(String patientCode) throws Exception {
		
		List<PatientVO> patientOne = null;
		
		patientOne = patientDAO.selectPatientOne(patientCode);
		
		return patientOne;
	}

	@Override
	public List<PatientVO> getPatentLsit(PatientVO vo) throws Exception {

		List<PatientVO> patientList = patientDAO.selectPatientToNameRegnum(vo);

		// 주민번호, 전화번호 암호화
		for(PatientVO list : patientList ) {
			String regnum = list.getPatientRegnum();
			String phone = list.getPatientPhone();

			regnum = regnum.replace(regnum.subSequence(8, 14), "******");
			phone = phone.replace(phone.substring(4,8), "****");

			list.setPatientRegnum(regnum);
			list.setPatientPhone(phone);
		}

		return patientList;
	}

//	@Override
//	public List<String> getMedicineName(String code) throws Exception{
//		return medicineDAO.selectMedicineNameList(code);
//	}

	// 환자의 과거 처방이력 조회
	@Override
	public List<PrescriptionHistoryVO> getPatientPreList(String code) throws Exception {
		return patientDAO.selectPatientPrescription(code);
	}

	/**
	 *	개요 : 약사가 약국에서 개별 환자의 과거처방이력을 확인할 때 사용
	 *	파라미터 : 환자의 환자코드
	 *	제작 : 이병진
	 */
	@Override
	public List<PrescriptionLogVO> getPatientPreListByPharmacist(String code) throws Exception {

		List<PrescriptionLogVO> plvList = patientDAO.selectPrescriptionLogByPharmacist(code);

		for (PrescriptionLogVO vo : plvList) {
			vo.setHospitalName("-");
			vo.setMemName("-");
			if(vo.getDoctorCode() != null) {
				PrescriptionLogVO exvo = patientDAO.selectDoctorNameByCode(vo.getDoctorCode());
				vo.setHospitalName(exvo.getHospitalName());
				vo.setMemName(exvo.getMemName());
			}
		}

		return plvList;
	}





}
