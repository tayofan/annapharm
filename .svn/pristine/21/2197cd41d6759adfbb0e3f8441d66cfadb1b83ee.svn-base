package kr.or.annapharm.dao;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;

import kr.or.annapharm.dto.PatientVO;
import kr.or.annapharm.dto.PrescriptionHistoryVO;
import kr.or.annapharm.dto.PrescriptionLogVO;

public class PatientDAOImpl implements IPatientDAO {

	private SqlSession session;

	public void setSession(SqlSession session) {
		this.session = session;
	}

	// 처방 대기 환자 목록 - 예전
//	@Override
//	public List<Map<String, String>> selectPatientList() throws Exception {
//		return session.selectList("Patient-Mapper.selectPatientList");
//	}

	// 처방 대기 환자 목록 - 최근
	@Override
	public List<Map<String, String>> selectWaitingPatientList() throws Exception {
		return session.selectList("Patient-Mapper.selectWaitingPatientList");
	}

	// 처방 대기 환자 목록 : 환자의 최근 처방일
	@Override
	public String selectPatiengLastPrescriptionDate(String patientCode) throws Exception {
		
		Date day = session.selectOne("Patient-Mapper.selectPatiengLastPrescriptionDate", patientCode);
		SimpleDateFormat format = new SimpleDateFormat("yyyy.MM.dd");
		
		System.out.println("dat : " + format.format(day));
		return format.format(day);
		
	}

	// 처방 대기 환자 중 선택한 환자 조회(환자코드) - 예전
	@Override
	public List<PatientVO> selectPatientOne(String patientCode) throws Exception {
		System.out.println("DAO Code = " + patientCode);
		return session.selectList("Patient-Mapper.selectPatientOne", patientCode);
	}
	
	
	// 처방 대기 환자 중 선택한 환자 조회(환자코드) - 최근
	@Override
	public List<PatientVO> selectWaitingPatientChoice(String patientCode) throws Exception {
		System.out.println("DAO Code = " + patientCode);
		return session.selectList("Patient-Mapper.selectWaitingPatientChoice", patientCode);
	}




	@Override
	public List<PatientVO> selectPatientToNameRegnum(PatientVO vo) throws Exception {

		System.out.println("다오 생년월일 : " + vo.getPatientRegnum());
		System.out.println("다오 이름 : " + vo.getPatientName());

		return session.selectList("Patient-Mapper.selectPatientToNameRegnum", vo);
	}


	// 헤지 : 환자의 과거 처방 내역
	@Override
	public List<PrescriptionHistoryVO> selectPatientPrescription(String code) throws Exception {
		return session.selectList("Patient-Mapper.selectPatientPrescription",code);
	}


	/**
	 *	개요 : 약사가 약국에서 개별 환자의 과거처방이력을 확인할 때 사용
	 *	파라미터 : 환자의 환자코드
	 *	제작 : 이병진
	 */
	@Override
	public List<PrescriptionLogVO> selectPrescriptionLogByPharmacist(String code) throws Exception {
		return session.selectList("Patient-Mapper.selectPrescriptionLogByPharmacist",code);
	}


	/**
	 *	개요 : 의사 코드로 의사/병원명을 가져오는 메서드
	 *	파라미터 : 의사의  의사코드
	 *	작성자 : 이병진
	 */
	@Override
	public PrescriptionLogVO selectDoctorNameByCode(String doctorCode) throws Exception {
		return session.selectOne("Patient-Mapper.selectDoctorNameByCode",doctorCode);
	}






}
