<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page trimDirectiveWhitespaces="true" %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"  ></script>
<!-- 이름과 생년월일로 조회된 회원을 출력하는 기능 -->
<script  type="text/x-handlebars-template"  id="lookUp-list-template">
	{{#each .}}
		<tr class="lookupTbody" ondblclick="readyListInsert('{{patientName}}', '{{patientCode}}')">
			<td>{{inc @index}}</td>
			<td>{{patientName}}</td>
			<td>{{patientRegnum}}</td>
			<td>{{patientPhone}}</td>
		</tr>
	{{/each}}
</script>
<!-- 환자 코드로 환자의 과거 처방 이력을 조회하는 기능 -->
<script  type="text/x-handlebars-template"  id="preList-list-template">
	{{#each .}}
		<tr class="preListTr" val="{{psCode}}" onclick="preListDetail('{{psCode}}')">
			<td>{{inc @index}}</td>
			<td>{{psType}}</td>
			<td>{{psCode}}</td>
			<td>
				{{prettifyDate psDate}}
			</td>
			<td>
				{{prettifyDate psCompleteDate}}
			</td>
			<td>{{hospitalName}}</td>
			<td>{{memName}}</td>
			<td>{{pharmacyName}}</td>
			{{#eq psStatus "조제대기"}}
				<td class="statusReady">{{psStatus}}</td>
			{{else eq psStatus "조제완료"}}
				<td class="statusEnd">{{psStatus}}</td>
			{{else}}
				<td class="statusUpdate">{{psStatus}}</td>
			{{/eq}}
		</tr>
	{{/each}}
</script>

<script>
window.onload = function(){
	getCookie('readyList');
}
</script>

<script>
// 환자 조회 엔터키 event
function lookupEnter(){
	if (window.event.keyCode == 13) {
		lookupRead();
	}
}
</script>

<script>
// 과거 처방 이력 클릭 시 이벤트
function preListDetail(code){
	//alert(code + " 확인");
	
	// 처방전의 첫번째 약 정보를 가져오는 함수
	readMedicineInfo(code);
	
	var data = {"psCode":code};
	
	$.ajax({
		url : "prescriptionDetail",
		type : "post",
		data : data,
		success : function(res){
			
			console.log(res.pdvo.psStatus);
			
// 			var psDate = res.pdvo.psLastDate;
			
			$('#prePsCode').attr('value', res.pdvo.psCode);
			$('#prePsDate').attr('value', res.pdvo.psLastDate);
			$('#preHospitalName').attr('value', res.pdvo.hospitalName);
			$('#preDoctorName').attr('value', res.pdvo.memName);
			$('#prePharmacyName').attr('value', '-');
			$('#prePharmacistName').attr('value', '-');
			$('#prePsStatus').attr('value', res.pdvo.psStatus);
			
			var parent_val = $("#preHospitalName").attr('value'); 
			
			console.log("parent_val : " + parent_val);
			
			if(res.pdvo.psStatus == "조제대기" || res.pdvo.psStatus == "수정요청"){
				$('#preUpdateBtn').attr("disabled",false);
			}else if(res.pdvo.psStatus == "조제완료"){
				$('#preUpdateBtn').attr("disabled",true);
			}
			
			printDataDetail(res.pdList,$('#prescriptionChoiceDetail'),$('#preDetailList-list-template'))
			
		},
		error : function(){
			alert("실패~");
		}
	})
}

// 처방전의 첫번째 약 정보를 가져오는 함수
function readMedicineInfo(code){
	var data = {"psCode":code};

	//console.log(data);
	//console.log(code);

	$.ajax({
		url: "medicineInfo",
		type: "post",
		data: data,
		success:function(res){
			$('#readMName').text(res.mdName);
			$('#readMUrl').attr('onclick', 'OpenWindow("'+res.mdUrl+'", "상세정보", "600", "800")');
			$('#readMEffect').attr('onclick', 'location.href="' + res.mdEffect + '"');
			$('#readMUse').attr('onclick', 'location.href="' + res.mdUse + '"');
			$('#readMAttention').attr('onclick', 'location.href="' + res.mdAttention + '"');
		},
		error:function(error){
			alert("약품 상세 정보 조회에 실패하였습니다.");
		}
	});
}

</script>

<script>
//헤지 : 처방전 상세 내역 출력 핸들바스
function printDataDetail(list,target,templateObject){
	var template = Handlebars.compile(templateObject.html());
	var html = template(list);
	$('.preDetailList').remove();
	target.append(html);
}
</script>



<script  type="text/x-handlebars-template"  id="preDetailList-list-template">
	{{#each .}}
		<tr class="preDetailList" style="height: 25px;">
			<td style="padding: 0px; padding-bottom: 4px; width: 30px;">{{inc @index}}</td>

			{{#eq mdClass "전문"}}
				<td class="sortPro" style="width: 33px;">{{mdClass}}</td>
			{{else}}
				<td class="sortGeneral" style="width: 33px;">{{mdClass}}</td>
			{{/eq}}

			<td style="width: 88px;">{{mdNo}}</td>
			<td data-toggle="tooltip" title="{{mdName}}" style="width: 214px;">{{mdName}}</td>
			<td>{{preDrugCount}}</td>
			<td>{{preDrugDay}}</td>
			<td>(위치)</td>
			<td>(재고)</td>
			<td style="padding-right: 0;width: 40px;">보험</td>
		</tr>
	{{/each}}
</script>

<script>
// 환자 정보를 입력 후 조회 버튼 클릭시 이벤트
function lookupRead(){
	$('.lookupTbody').remove();
	var lookUpName = $('#lookUpName').val();
	var lookUpBirth = $('#lookUpBirth').val();

	if(lookUpName == ""){
		alert('이름을 입력해주세요!');
		return;
	}

	if(lookUpBirth == ""){
		alert('생년월일을 입력해주세요!');
		return;
	}


	var data={
			"lookUpName":lookUpName,
			"lookUpBirth":lookUpBirth
	}

	$.ajax({
		url:"lookUp",
		type:"post",
		data:data,
		success:function(data){
			alert('회원이 조회되었습니다.');
			if(data == ""){
				var str = "<tr class='lookupTbody'><td colspan='4'>조회 결과가 없습니다.</td></tr>";
				$('#lookupList').append(str)
			}else{
				printData(data,$('#lookupList'),$('#lookUp-list-template'))
			}
		},
		error:function(error){
			alert('회원 조회에 실패하였습니다.')
		}
	});
}

function printData(list,target,templateObject){
	var template = Handlebars.compile(templateObject.html());
	var html = template(list);
	$('.lookupTbody').remove();
	target.append(html);
}

// 과거 처방 이력 출력 핸들바스 생성
function printDataPreList(list,target,templateObject){
	var template = Handlebars.compile(templateObject.html());
	var html = template(list);
	$('.preListTr').remove();
	target.append(html);
}

// 과거 처방 이력 출력
function preList(data){
	$('.preListTr').remove();
	var ptCode = data.getAttribute('val');


	$.ajax({
		url:"preList.do",
		type:"post",
		data: {"ptCode":ptCode},
		success:function(data){
			if(data == ""){
				var str = "<tr class='preListTr'><td colspan='9'>조회 결과가 없습니다.</td></tr>";
				$('#preList').append(str)
			}else{
				printDataPreList(data,$('#preList'),$('#preList-list-template'))
			}
		},
		error:function(error){
			alert('과거 내역 조회에 실패하였습니다.')
		}
	});
}
</script>

<script>

 var readyListCount = 0;
 // 대기열 추가
 function readyListInsert(ptName, ptCode){

	 var overlapCheck = new Array();
	 overlapCheck = document.getElementsByClassName('readyListTr');
	 //console.log('확인', overlapCheck.length);

	 // 쿠키와 숫자 중복 방지
	 if(overlapCheck.length > 0){
		readyListCount = overlapCheck[overlapCheck.length - 1].children[0].innerText;
	 }

	 // 환자 중복 등록 방지
	 if(overlapCheck.length > 0){
		 for(let i = 0; i < overlapCheck.length; i++){
			 if(overlapCheck[i].getAttribute('val') == ptCode){
				 alert('이미 대기열에 등록된 환자입니다,');
				return;
			 }
		 }
	 }
	 // 대기열 숫자 증가
	 readyListCount++;

	 var str = "<tr val="+ ptCode +" class='readyListTr' onclick='preList(this)' ondblclick='listDelete("+'"'+ ptName +'"'+", this)'><td>"+ readyListCount +"</td><td>" + ptName + "</td></tr>";
	 $('#readyList').append(str);

	 forJson(overlapCheck);
 }

 function forJson(data){
	 for(let j = 0; j < data.length; j++){
		 var readyData = "";
		 for(let i = 0; i < data.length; i++){
			 if(i != 0){
			 	readyData += ",";
			 }
			 var readyCount = data[i].children[0].innerText;
			 var readyName = data[i].children[1].innerText;
			 var readyCode = data[i].getAttribute('val')

			 readyData += '{"count" : "' + readyCount + '"';
			 readyData += ', "name" : "' + readyName + '"';
			 readyData += ', "code" : "' + readyCode + '"}';
		 }
		 var readyJson = "[" + readyData + "]";
	 }

// 	 console.log(readyJson);
// 	 console.log(JSON.stringify(readyJson));
	 setInstantCookie('readyList', readyJson);
 }

</script>

<script>
// 약국 대기목록에서 대기 환자 삭제
function listDelete(name, data){
	var deleteCheck = confirm(name +' 환자를 대기열에서 지우시겠습니까?')

	if(deleteCheck){
		data.remove();
		alert(name + ' (님)이 대기 목록에서 삭제되었습니다.');
		var overlapCheck = new Array();
		overlapCheck = document.getElementsByClassName('readyListTr');
		forJson(overlapCheck);
	}else{
		alert('작업이 취소되었습니다.');
	}
}
</script>

<script>
// 브라우저가 닫히면 없어지는 쿠키 생성
function setInstantCookie(cName, cValue){
	var expire = new Date();
	cookies = cName + '=' + escape(cValue)+";"; // 한글 깨짐을 막기위해 escape(cValue)를 합니다.
	document.cookie = cookies;
// 	alert(JSON.parse(document.cookie));
//	alert(document.cookie);
}

// 쿠키 가져오기 함수
function getCookie(cName) {
	cName = cName + '=';
	var cookieData = document.cookie;
	var start = cookieData.indexOf(cName);
	var cValue = '';
	if(start != -1){
		start += cName.length;
		var end = cookieData.indexOf(';', start);
			if(end == -1)end = cookieData.length;
		cValue = cookieData.substring(start, end);
	}
	//console.log(cValue);
// 	console.log(unescape(cValue));
// 	console.log('테스트',JSON.parse(unescape(cValue)));
	//console.log('테스트',JSON.parse(unescape(cValue))[0].name);
	//console.log('테스트2',JSON.parse(unescape(cValue)).length);
	if(unescape(cValue)){
		var result = JSON.parse(unescape(cValue));
		var resultStr = "";
		var count = 0;

		for(let i = 0; i < result.length; i++){
			resultStr += "<tr val="+ result[i].code +" class='readyListTr' onclick='preList(this)' ondblclick='listDelete("+'"'+ result[i].name +'"'+", this)'><td>"+ result[i].count +"</td><td>" + result[i].name + "</td></tr>";
			count = result[i].count;
		}

		$('#readyList').append(resultStr)
	}
	return count;
	}

</script>


<!-- 약사 창에서 [등록]버튼 클릭 : 환자 등록 창 오픈 -->
<script>
	function memberInsert(){
		window.open('<%=request.getContextPath() %>/pharmacist/addPatient.do','환자등록','width=400,height=270,left=600,top=300,location=no,status=no,scrollbars=yes');
	}

</script>

<!-- 환자 등록 창에서 [등록]버튼 클릭 -->
<script>
	
	function insertMemberForPharmacist2(){
		
 		// 등록할 이름, 주민번호, 전화번호 가져오기
// 		var memName = $('input[name=memberName]').val();
// 		var memReg = $('input[name=memberReg]').val();
// 		var memTel = $('input[name=memberTel]').val();
		
// 		console.log("memName" + memName);
// 		console.log("memReg" + memReg);
// 		console.log("memTel" + memTel);
		
// 		var arr = [];
		
// 		var obj = "";
		
// 		obj += '{"memName" : "' + memName + '"';
// 		obj += ', "memRegnum" : "' + memReg + '"';
// 		obj += ', "memTel" : "' + memTel + '"}';
		
// 		arr.push(obj);
		
// 		$.ajax({
// 			url:"insertMemberForPharmacist",
// 			data:JSON.stringify(arr),
// 			contentType:"application/json",
// 			type:"post",
// 			success:functiion(res){
// 				alert("확인~");
// 			},
// 			error:function(){
// 				alert("실패~");
// 			}
			
// 		})

	}

</script>

<!-- 약사의 처방 수정 요청 -->
<!-- <script> -->
<!-- 	function requestUpdatePre(){ -->
<%-- 		window.open('<%=request.getContextPath() %>/pharmacist/requestUpdatePrescription.do','처방수정요청','width=500,height=540,left=600,top=150,location=no,status=no,scrollbars=yes'); --%>
<!-- 	} -->
<!-- </script> -->

<script>
	

	function requestUpdatePre() {
		// window.name = "부모창 이름"; 
		// window.open("open할 window", "자식창 이름", "팝업창 옵션");
		var openWin2 = window.open('<%=request.getContextPath() %>/pharmacist/requestUpdatePrescription.do','처방수정요청','width=500,height=410,left=600,top=150,location=no,status=no,scrollbars=yes');
		
		console.log("하이 : " + document.getElementById("preHospitalName").value)
		
		var hosName = document.getElementById("preHospitalName").value;
		var doctorName = document.getElementById("preDoctorName").value;
		
		var ptCode = $('.readyListTr').attr('val');
		var psCode = $('.preListTr').attr('val');
		
		console.log("환자코드 : " + ptCode);
		console.log("처방전코드 : " + psCode);
		
		var patientName = $('#readyList').find("td:eq(1)").text();
// 		console.log(patientName);
		
		setTimeout(() => {
			console.log(openWin2.document.getElementById("hosNameRequest"));
			console.log(openWin2.$('#hosNameRequest'));
			
			// 병원명
			openWin2.document.getElementById("hosNameRequest").value = hosName;
			// 의사명
			openWin2.document.getElementById("DoctorNameRequest").value = doctorName;
			// 환자코드
			openWin2.document.getElementById("PatientCodeRequest").value = ptCode;
			// 환자이름
			openWin2.document.getElementById("PatientNameRequest").value = patientName;
			// 처방전코드
			openWin2.document.getElementById("PrescriptionRequest").value = psCode;
			
		}, 800);
		
		
		
// 		openWin2.document.getElementById("hosNameRequest").value = hosName;
	}
</script>












