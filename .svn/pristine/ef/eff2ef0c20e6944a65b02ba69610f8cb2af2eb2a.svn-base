<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SalesAnalysis-Mapper">

	<sql id="search">
		<if test="searchType == O.toString">
			and chemist_code == #{searchType}
		</if>
	</sql>

	<!-- 병진 : 로그인한 약사의 약국에 해당하는 모든 약사를 가져오는 SQL -->
	<select id="selectChemistsName" resultType="String">
		SELECT
		    B.mem_name
		  FROM chemist A, member B
		 where pharmacy_code = #{loginUserPharmacyCode}
		   and A.mem_id = B.mem_id
	</select>

	<!-- 병진 : 로그인한 유저 아이디로 약국 코드와 약사 이름 뽑기 -->
	<select id="loginUserpharmacyCode" resultType="kr.or.annapharm.dto.RegistBillVO">
		select
		    A.PHARMACY_CODE as pi_hpid 					<!-- 약국 코드 -->
		    ,B.mem_name 		     			<!-- 성명 -->
		    ,substr(B.mem_regnum,0,6) as mem_regnum		<!-- 생년월일 -->
		  from chemist A, member B
		 where A.mem_id = #{memId}
		   and A.mem_id = B.mem_id
	</select>

	<!-- 병진 : 로그인한 약사의 약국 코드로  약국의 정보를 가져오는 SQL문 -->
	<select id="selectPharmacyInfo" resultType="kr.or.annapharm.dto.RegistBillVO">
		select
		    PI_DUTYNAME 									<!-- 약국 이름 -->
		    ,PI_DUTYTEL1 									<!-- 약국 전화번호 -->
		    ,PI_DUTYADDR 									<!-- 약국 주소 -->
		    ,(concat(PI_POSTCDN1,PI_POSTCDN2)) as pi_postcdn <!-- 약국 우편번호 -->
		  from pharmacy_info
		 where pi_hpid = #{piHpid}
	</select>

	<!-- 병진 기간이나 약사에 따라 처방전을 가져오는 sql문 -->
	<select id="selectSearchAnalysisList" resultType="salesAnalysis">
		SELECT
		    A.ps_complete_date			<!-- 처방 완료 일자 -->
		   ,A.ps_type           		<!-- 구분(처방/비처방) -->
		   ,C.mem_name as chemistName   <!-- 조제약사 -->
		   ,F.mem_name as patientName   <!-- 환자이름 -->
		   ,A.ps_code          			<!-- 처방전 코드 -->
		  FROM prescription A, chemist B, member C, patient D, member F
		 where ps_complete_date is not null
		   <!-- and A.ps_complete_date between to_date(20220501,'YYYYMMDD') and to_date(20220801,'YYYYMMDD') 동적쿼리로 대체-->
		   <!-- and A.chemist_code = 'F00001' 동적쿼리로 대체-->
		   and A.chemist_code = B.chemist_code
		   and B.mem_id = C.mem_id
		   and A.patient_code = D.patient_code
		   and D.mem_id = F.mem_id
		   order by A.ps_complete_date desc
	</select>

	<!-- 병진 : 처방전 코드를 통해 해당 처방전의 처방약 정보를 가져오는 SQL문 -->
	<select id="selectSearchAnalysisListMedicienData" resultType="MedicienCalculat">
		SELECT
		    A.ps_code     		<!-- 처방전 코드 -->
		   , A.md_no           	<!-- 약품 번호 -->
		   , A.pre_drug_day    	<!-- 조제일수 -->
		   , A.pre_drug_num  	<!-- 약 총 개수 -->
		   , B.md_drug         	<!-- 마약류 구분 -->
		   , C.mi_price			<!-- 약 가격 -->
		  FROM pre_drug A, medicine B, medicine_info C
		 where ps_code = #{psCode}
		   and A.md_no = B.md_no
		   and B.mi_code = C.mi_code
	</select>



	<!-- 병진 : 약국 정보를 넣기 위한  SQL문 -->
	<select id="test" resultType="kr.or.annapharm.PharmacyAPIVO">
	INSERT INTO pharmacy_info (
				pi_dutyname
				,pi_rnum
				,pi_dutyaddr
				,pi_dutytel1
				,pi_dutytime1c
				,pi_dutytime1s
				,pi_dutytime2c
				,pi_dutytime2s
				,pi_dutytime3c
				,pi_dutytime3s
				,pi_dutytime4c
				,pi_dutytime4s
				,pi_dutytime5c
				,pi_dutytime5s
				,pi_dutytime6c
				,pi_dutytime6s
				,pi_dutytime7c
				,pi_dutytime7s
				,pi_dutytime8c
				,pi_dutytime8s
				,pi_hpid
				,pi_postcdn1
				,pi_postcdn2
				,pi_wgs84lon
				,pi_wgs84lat
				) VALUES (
				'${piDutyname}'
				,'${piRnum}'
				,'${piDutyaddr}'
				,'${piDutytel1}'
				,'${piDutytime1c}'
				,'${piDutytime1s}'
				,'${piDutytime2c}'
				,'${piDutytime2s}'
				,'${piDutytime3c}'
				,'${piDutytime3s}'
				,'${piDutytime4c}'
				,'${piDutytime4s}'
				,'${piDutytime5c}'
				,'${piDutytime5s}'
				,'${piDutytime6c}'
				,'${piDutytime6s}'
				,'${piDutytime7c}'
				,'${piDutytime7s}'
				,'${piDutytime8c}'
				,'${piDutytime8s}'
				,'${piHpid}'
				,'${piPostcdn1}'
				,'${piPostcdn2}'
				,'${piWgs84lon}'
				,'${piWgs84lat}'
				)
	</select>

</mapper>