<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Business-Mapper">  
	<select id="selectSearchMedicine" resultType="kr.or.annapharm.dto.SearchMedicineVO">
		select
			 a.md_name as md_name
			,a.md_component as md_component
			,a.md_class as md_class
			,substr(b.mi_name,instr(b.mi_name,'_' )+1) as unit
			,b.mi_maincode as mi_maincode
		  from medicine a, medicine_info b
		 where a.mi_code = b.mi_code
		   and a.md_name like '%'||#{keyword}||'%'
	</select>
	
	<select id="selectSearchMedicineCount" resultType="int">
		select count(*)
		from medicine
		where md_name like '%'||#{keyword}||'%'
	</select>
	
	<select id="selectSearchBasis" resultType="kr.or.annapharm.dto.SearchMedicineVO">
		select
		distinct a.md_component as md_component
		,b.mi_type
		,a.md_class as md_class
		,substr(b.mi_name,instr(b.mi_name,'_' )+1) as unit
		,b.mi_maincode as mi_maincode
		,b.mi_use
		from medicine a, medicine_info b
		where a.mi_code = b.mi_code
		and a.md_component like '%'||#{keyword}||'%'
	</select>
	
	<select id="selectSearchBasisCount" resultType="int">
		select count(*)
		from (
		select
		distinct a.md_component as md_component
		,b.mi_type
		,a.md_class as md_class
		,substr(b.mi_name,instr(b.mi_name,'_' )+1) as unit
		,b.mi_maincode as mi_maincode
		from medicine a, medicine_info b
		where a.mi_code = b.mi_code
		and a.md_component like '%'||#{keyword}||'%'
		)
	</select>
	
	<select id="selectCompareMedicine" resultType="kr.or.annapharm.dto.CompareMedicineVO">
		select
		 a.md_no
		,a.md_name
		,b.mi_company
		,a.md_class
		,b.mi_price
		from medicine a, medicine_info b
		where a.mi_code = b.mi_code
		and b.mi_maincode = #{miMaincode}
	</select>
	
	<update id="insertSelectList" parameterType="kr.or.annapharm.dto.SelectListVO">
		insert into select_list(md_no,chemist_code) 
		values(#{mdNo},#{chemistCode})
	</update>
	
	<delete id="deleteSelectList" parameterType="kr.or.annapharm.dto.SelectListVO">
		delete from select_list 
		where md_no = #{mdNo}
		and chemist_code = #{chemistCode}
	</delete>
	
	<select id="selectSelectList" resultType="kr.or.annapharm.dto.SelectListVO">
		select
		 a.md_no
		,c.chemist_code 
		,a.md_name
		,b.mi_company
		,a.md_class
		,b.mi_price
		from medicine a, medicine_info b, select_list c
		where a.mi_code = b.mi_code
		and a.md_no = c.md_no
		and c.chemist_code = #{chemistCode}
	</select>
	
	<select id="salesByAgeList" resultType="kr.or.annapharm.dto.SalesByAgeVO">
		select
		   z.age
		  ,z.sex
		  ,nvl(y.price,0) price
		  ,nvl(y.count,0) count
		  ,nvl(y.biprice,0) biprice
		  ,nvl(y.bicount,0) bicount
		  ,nvl( (price + biprice),0) totalprice
		  ,nvl( (count + bicount),0) totalcount
		from
		   (
		      select
		         a.age
		        ,b.sex
		      from
		         (
		            select
		               (level-1) * 10 age
		            from
		               dual
		            connect by
		               <![CDATA[level < 10]]>
		         ) a
		        , (
		            select
		               '남성' sex
		            from
		               dual
		            union all
		            select
		               '여성' sex
		            from
		               dual
		         ) b
		   ) z
		  , (
		      select
		         age
		        ,sex
		        ,sum(cheobangprice) as price
		        ,sum(cheobangcount) as count
		        ,sum(bicheobangprice) as biprice
		        ,sum(bicheobangcount) as bicount
		      from
		         (
		            select
		               trunc(to_number(to_char(sysdate,'yyyy') + 1 - (substr(c.patient_regnum,0,2) + (
		                  case
		                      <![CDATA[when substr(c.patient_regnum,8,1) < 3  then 1900
		                     when substr(c.patient_regnum,8,1) >= 3 then 2000]]>
		                  end
		               ) ) ) / 10) * 10 as age
		              , (
		                  case
		                     when substr(c.patient_regnum,8,1) = '1'
		                          or substr(c.patient_regnum,8,1) = '3' then '남성'
		                     else '여성'
		                  end
		               ) as sex
		              ,nvl(d.sumprice,0) as cheobangprice
		              ,nvl(d.count,0) as cheobangcount
		              ,nvl(e.sumprice,0) as bicheobangprice
		              ,nvl(e.count,0) as bicheobangcount
		            from
		               patient c
		               left outer join (
		                  select
		                     a.patient_code
		                    ,sum(a.sale_price) as sumprice
		                    ,count(a.sale_price) as count
		                  from
		                     sale a
		                    ,prescription b
		                  where
		                     a.ps_code = b.ps_code
		                     and   b.ps_type = '처방'
		                     and   a.sale_date between to_date(#{startDate}) and to_date(#{endDate})
		                  group by
		                     a.patient_code
		               ) d on c.patient_code = d.patient_code
		               left outer join (
		                  select
		                     a.patient_code
		                    ,sum(a.sale_price) as sumprice
		                    ,count(a.sale_price) as count
		                  from
		                     sale a
		                    ,prescription b
		                  where
		                     a.ps_code = b.ps_code
		                     and   b.ps_type = '비처방'
		                     and   a.sale_date between to_date(#{startDate}) and to_date(#{endDate})
		                  group by
		                     a.patient_code
		               ) e on c.patient_code = e.patient_code
		         )
		      group by
		         age
		        ,sex
		   ) y
		where
		   z.age = y.age (+)
		   and   z.sex = y.sex (+)
		<if test="searchType != null">
			order by ${searchType} ${searchType2}	
		</if>
		<if test="searchType == null">
			order by totalcount desc	
		</if>
	</select>
	
</mapper>
